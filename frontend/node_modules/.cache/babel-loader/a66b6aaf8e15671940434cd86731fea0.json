{"ast":null,"code":"function n(n, t) {\n  if (!n) {\n    var r,\n        o = new Error(\"INVARIANT \" + t);\n    throw o.stack = o.stack.split(\"\\n\").filter(function (n) {\n      return !/at invariant/.test(n);\n    }).join(\"\\n\"), (r = console).error.apply(r, [\"\\n\\n---\\n\\n\", o, \"\\n\\n\"].concat([].slice.call(arguments, 2), [\"\\n\\n---\\n\\n\"])), o;\n  }\n}\n\nexport { n as invariant };","map":{"version":3,"sources":["../src/index.js"],"names":["invariant","fact","msg","error","Error","stack","split","filter","test","d","join","console"],"mappings":"SAAgBA,C,CAAWC,C,EAAMC,C,EAAAA;AAC/B,MAAA,CAAKD,CAAL,EAAW;AAAA,QAAA,CAAA;AAAA,QACHE,CAAAA,GAAQ,IAAIC,KAAJ,CAAIA,eAAmBF,CAAvB,CADL;AAOT,UALAC,CAAAA,CAAME,KAANF,GAAcA,CAAAA,CAAME,KAANF,CACXG,KADWH,CACL,IADKA,EAEXI,MAFWJ,CAEJ,UAAA,CAAA,EAAA;AAAA,aAAA,CAAM,eAAeK,IAAf,CAAoBC,CAApB,CAAN;AAA0BA,KAFtBN,EAGXO,IAHWP,CAGN,IAHMA,CAAdA,EAGQ,CAAA,CAAA,GACRQ,OADQ,EACAR,KADA,CACAA,KADA,CACAA,CADA,EACAA,CAAM,aAANA,EAAqBA,CAArBA,EAA4B,MAA5BA,EAA4B,MAA5BA,CAA4B,GAAA,KAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,CAA5BA,EAA4B,CAAiB,aAAjB,CAA5BA,CADA,CAHRA,EAKMA,CAAN;AAAMA;AAAAA;;AAAAA,SAAAA,CAAAA,IAAAA,SAAAA","sourcesContent":["export function invariant (fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}