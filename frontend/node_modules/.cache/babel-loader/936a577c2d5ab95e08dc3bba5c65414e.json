{"ast":null,"code":"import { SUBSCRIBE as n, UNSUBSCRIBE as r, spawn as e, send as t, subscriber as o } from \"@onflow/util-actor\";\n\nvar i,\n    u = \"config\",\n    f = \"PUT_CONFIG\",\n    c = \"GET_CONFIG\",\n    l = \"CONFIG/UPDATED\",\n    a = function (n) {\n  return n;\n},\n    s = ((i = {})[f] = function (n, r, e) {\n  var t = e.key,\n      o = e.value;\n  if (null == t) throw new Error(\"Missing 'key' for config/put.\");\n  n.put(t, o), n.broadcast(l, n.all());\n}, i[c] = function (n, r, e) {\n  var t = e.key,\n      o = e.fallback;\n  if (null == t) throw new Error(\"Missing 'key' for config/get\");\n  r.reply(n.get(t, o));\n}, i.UPDATE_CONFIG = function (n, r, e) {\n  var t = e.key,\n      o = e.fn;\n  if (null == t) throw new Error(\"Missing 'key' for config/update\");\n  n.update(t, o || a), n.broadcast(l, n.all());\n}, i.DELETE_CONFIG = function (n, r, e) {\n  var t = e.key;\n  if (null == t) throw new Error(\"Missing 'key' for config/delete\");\n  n.delete(t), n.broadcast(l, n.all());\n}, i.WHERE_CONFIG = function (n, r, e) {\n  var t = e.pattern;\n  if (null == t) throw new Error(\"Missing 'pattern' for config/where\");\n  r.reply(n.where(t));\n}, i[n] = function (n, r) {\n  n.subscribe(r.from), n.send(r.from, l, n.all());\n}, i[r] = function (n, r) {\n  n.unsubscribe(r.from);\n}, i);\n\nfunction E(n, r) {\n  return t(u, f, {\n    key: n,\n    value: r\n  }), b();\n}\n\nfunction p(n, r) {\n  return t(u, c, {\n    key: n,\n    fallback: r\n  }, {\n    expectReply: !0,\n    timeout: 10\n  });\n}\n\nfunction y(n, r) {\n  return void 0 === r && (r = a), t(u, \"UPDATE_CONFIG\", {\n    key: n,\n    fn: r\n  }), b();\n}\n\nfunction g(n) {\n  return t(u, \"DELETE_CONFIG\", {\n    key: n\n  }), b();\n}\n\nfunction k(n) {\n  return t(u, \"WHERE_CONFIG\", {\n    pattern: n\n  }, {\n    expectReply: !0,\n    timeout: 10\n  });\n}\n\nfunction w(n) {\n  return o(u, function () {\n    return e(s, u);\n  }, n);\n}\n\nfunction b() {\n  return {\n    put: E,\n    get: p,\n    update: y,\n    delete: g,\n    where: k,\n    subscribe: w\n  };\n}\n\ne(s, u);\nexport { b as config };","map":{"version":3,"sources":["../src/index.js"],"names":["NAME","PUT","GET","UPDATED","identity","v","HANDLERS","ctx","_letter","key","value","Error","put","broadcast","all","letter","fallback","reply","get","fn","update","pattern","where","SUBSCRIBE","subscribe","from","send","UNSUBSCRIBE","unsubscribe","spawn","config","expectReply","timeout","_delete","callback","subscriber","delete"],"mappings":"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","sourcesContent":["import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\nexport function config() {\n  return {put, get, update, delete: _delete, where, subscribe}\n}\n"]},"metadata":{},"sourceType":"module"}