{"ast":null,"code":"import { isPing as e, isGetBlockByHeight as t, isGetBlockById as r, isGetLatestBlock as n, isGetEvents as o, isGetAccount as a, isScript as s, isGetTransactionStatus as i, isTransaction as u } from \"@onflow/interaction\";\nimport { Transaction as c, SendTransactionRequest as g, AccessAPI as l, GetTransactionRequest as d, ExecuteScriptAtLatestBlockRequest as f, GetAccountRequest as m, GetEventsForHeightRangeRequest as p, GetLatestBlockRequest as v, GetBlockByIDRequest as h, GetBlockByHeightRequest as S, PingRequest as I } from \"@onflow/protobuf\";\nimport { response as y } from \"@onflow/response\";\nimport { sansPrefix as k, withPrefix as P } from \"@onflow/util-address\";\nimport { grpc as B } from \"@improbable-eng/grpc-web\";\nimport { NodeHttpTransport as w } from \"@improbable-eng/grpc-web-node-http-transport\";\nimport { config as b } from \"@onflow/config\";\n\nvar x = function (e, t, r) {\n  try {\n    return Promise.resolve(new Promise(function (n, o) {\n      B.unary(t, {\n        request: r,\n        host: e,\n        onEnd: function (e) {\n          var t = e.statusMessage;\n          e.status === B.Code.OK ? n(e.message) : o(new Error(t));\n        }\n      });\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nB.setDefaultTransport(w());\n\nvar L = function (e) {\n  return Buffer.from(e, \"hex\");\n},\n    A = function (e) {\n  return Buffer.from(e.padStart(16, 0), \"hex\");\n};\n\nfunction U() {\n  return (U = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar E = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    _ = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    R = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    T = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    j = function (B, w) {\n  void 0 === w && (w = {});\n\n  try {\n    var j = function (b) {\n      return w.node = b, Promise.resolve(B).then(function (b) {\n        switch (B = b, !0) {\n          case u(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new c();\n                  n.setScript(Buffer.from(e.message.cadence, \"utf8\")), n.setGasLimit(e.message.computeLimit), n.setReferenceBlockId(e.message.refBlock ? L(e.message.refBlock) : null), n.setPayer(A(k(e.accounts[e.payer].addr))), e.message.arguments.forEach(function (t) {\n                    return n.addArguments(function (e) {\n                      return Buffer.from(JSON.stringify(e), \"utf8\");\n                    }(e.arguments[t].asArgument));\n                  }), e.authorizations.map(function (t) {\n                    return e.accounts[t].addr;\n                  }).reduce(function (e, t) {\n                    return e.find(function (e) {\n                      return e === t;\n                    }) ? e : [].concat(e, [t]);\n                  }, []).forEach(function (e) {\n                    return n.addAuthorizers(A(k(e)));\n                  });\n                  var o = new c.ProposalKey();\n                  o.setAddress(A(k(e.accounts[e.proposer].addr))), o.setKeyId(e.accounts[e.proposer].keyId), o.setSequenceNumber(e.accounts[e.proposer].sequenceNum), n.setProposalKey(o);\n\n                  for (var a = 0, s = Object.values(e.accounts); a < s.length; a++) {\n                    var i = s[a];\n\n                    try {\n                      if (!i.role.payer && null != i.signature) {\n                        var u = new c.Signature();\n                        u.setAddress(A(k(i.addr))), u.setKeyId(i.keyId), u.setSignature(L(i.signature)), n.addPayloadSignatures(u);\n                      }\n                    } catch (t) {\n                      throw console.error(\"Trouble applying payload signature\", {\n                        acct: i,\n                        ix: e\n                      }), t;\n                    }\n                  }\n\n                  for (var d = 0, f = Object.values(e.accounts); d < f.length; d++) {\n                    var m = f[d];\n\n                    try {\n                      if (m.role.payer && null != m.signature) {\n                        var p = new c.Signature();\n                        p.setAddress(A(k(m.addr))), p.setKeyId(m.keyId), p.setSignature(L(m.signature)), n.addEnvelopeSignatures(p);\n                      }\n                    } catch (t) {\n                      throw console.error(\"Trouble applying envelope signature\", {\n                        acct: m,\n                        ix: e\n                      }), t;\n                    }\n                  }\n\n                  var v = new g();\n                  v.setTransaction(n);\n                  var h = Date.now();\n                  return Promise.resolve(x(t.node, l.SendTransaction, v)).then(function (t) {\n                    var r,\n                        n = Date.now(),\n                        o = y();\n                    return o.tag = e.tag, o.transactionId = (r = t.getId_asU8(), Buffer.from(r).toString(\"hex\")), \"undefined\" != typeof window && window.dispatchEvent(new CustomEvent(\"FLOW::TX\", {\n                      detail: {\n                        txId: o.transactionId,\n                        delta: n - h\n                      }\n                    })), o;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case i(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new d();\n                  return n.setId(Buffer.from(e.transactionId, \"hex\")), Promise.resolve(x(t.node, l.GetTransactionResult, n)).then(function (t) {\n                    var r = t.getEventsList(),\n                        n = y();\n                    return n.tag = e.tag, n.transaction = {\n                      status: t.getStatus(),\n                      statusCode: t.getStatusCode(),\n                      errorMessage: t.getErrorMessage(),\n                      events: r.map(function (e) {\n                        return {\n                          type: e.getType(),\n                          transactionId: (t = e.getTransactionId_asU8(), Buffer.from(t).toString(\"hex\")),\n                          transactionIndex: e.getTransactionIndex(),\n                          eventIndex: e.getEventIndex(),\n                          payload: JSON.parse(Buffer.from(e.getPayload_asU8()).toString(\"utf8\"))\n                        };\n                        var t;\n                      })\n                    }, n;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case s(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new f(),\n                      o = Buffer.from(e.message.cadence, \"utf8\");\n                  return e.message.arguments.forEach(function (t) {\n                    return n.addArguments(function (e) {\n                      return Buffer.from(JSON.stringify(e), \"utf8\");\n                    }(e.arguments[t].asArgument));\n                  }), n.setScript(o), Promise.resolve(x(t.node, l.ExecuteScriptAtLatestBlock, n)).then(function (t) {\n                    var r = y();\n                    return r.tag = e.tag, r.encodedData = JSON.parse(Buffer.from(t.getValue_asU8()).toString(\"utf8\")), r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case a(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n,\n                      o = new m();\n                  return o.setAddress((n = k(e.accountAddr), Buffer.from(n.padStart(16, 0), \"hex\"))), Promise.resolve(x(t.node, l.GetAccount, o)).then(function (t) {\n                    var r = y();\n                    r.tag = e.tag;\n                    var n,\n                        o = t.getAccount(),\n                        a = (n = o.getContractsMap()) ? n.getEntryList().reduce(function (e, t) {\n                      var r;\n                      return U({}, e, ((r = {})[t[0]] = new TextDecoder(\"utf-8\").decode(t[1] || new UInt8Array()), r));\n                    }, {}) : {};\n                    return r.account = {\n                      address: P(E(o.getAddress_asU8())),\n                      balance: o.getBalance(),\n                      code: new TextDecoder(\"utf-8\").decode(o.getCode_asU8() || new UInt8Array()),\n                      contracts: a,\n                      keys: o.getKeysList().map(function (e) {\n                        return {\n                          index: e.getIndex(),\n                          publicKey: E(e.getPublicKey_asU8()),\n                          signAlgo: e.getSignAlgo(),\n                          hashAlgo: e.getHashAlgo(),\n                          weight: e.getWeight(),\n                          sequenceNumber: e.getSequenceNumber(),\n                          revoked: e.getRevoked()\n                        };\n                      })\n                    }, r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case o(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new p();\n                  return n.setType(e.events.eventType), n.setStartHeight(Number(e.events.start)), n.setEndHeight(Number(e.events.end)), Promise.resolve(x(t.node, l.GetEventsForHeightRange, n)).then(function (t) {\n                    var r = y();\n                    r.tag = e.tag;\n                    var n = t.getResultsList();\n                    return r.events = n.reduce(function (e, t) {\n                      var r = t.getBlockId(),\n                          n = t.getBlockHeight();\n                      return t.getEventsList().forEach(function (t) {\n                        var o;\n                        e.push({\n                          blockId: r,\n                          blockHeight: n,\n                          type: t.getType(),\n                          transactionId: (o = t.getTransactionId_asU8(), Buffer.from(o).toString(\"hex\")),\n                          transactionIndex: t.getTransactionIndex(),\n                          eventIndex: t.getEventIndex(),\n                          payload: JSON.parse(Buffer.from(t.getPayload_asU8()).toString(\"utf8\"))\n                        });\n                      }), e;\n                    }, []), r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case n(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new v();\n                  return e.latestBlock && e.latestBlock.isSealed && (n.setIsSealed(e.latestBlock.isSealed), console.error(\"\\n          %c@onflow/send Deprecation Notice\\n          ========================\\n\\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\\n\\n          =======================\\n        \".replace(/\\n\\s+/g, \"\\n\").trim(), \"font-weight:bold;font-family:monospace;\")), e.block && e.block.isSealed && n.setIsSealed(e.block.isSealed), Promise.resolve(x(t.node, l.GetLatestBlock, n)).then(function (t) {\n                    var r = t.getBlock(),\n                        n = r.getCollectionGuaranteesList(),\n                        o = r.getBlockSealsList(),\n                        a = r.getSignaturesList(),\n                        s = y();\n                    return s.tag = e.tag, s.block = {\n                      id: _(r.getId_asU8()),\n                      parentId: _(r.getParentId_asU8()),\n                      height: r.getHeight(),\n                      timestamp: r.getTimestamp(),\n                      collectionGuarantees: n.map(function (e) {\n                        return {\n                          collectionId: _(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: _(e.getBlockId_asU8()),\n                          executionReceiptId: _(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, s;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case r(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new h();\n                  return n.setId(Buffer.from(e.block.id, \"hex\")), Promise.resolve(x(t.node, l.GetBlockByID, n)).then(function (t) {\n                    var r = t.getBlock(),\n                        n = r.getCollectionGuaranteesList(),\n                        o = r.getBlockSealsList(),\n                        a = r.getSignaturesList(),\n                        s = y();\n                    return s.tag = e.tag, s.block = {\n                      id: R(r.getId_asU8()),\n                      parentId: R(r.getParentId_asU8()),\n                      height: r.getHeight(),\n                      timestamp: r.getTimestamp(),\n                      collectionGuarantees: n.map(function (e) {\n                        return {\n                          collectionId: R(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: R(e.getBlockId_asU8()),\n                          executionReceiptId: R(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, s;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case t(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new S();\n                  return n.setHeight(e.block.height), Promise.resolve(x(t.node, l.GetBlockByHeight, n)).then(function (t) {\n                    var r = t.getBlock(),\n                        n = r.getCollectionGuaranteesList(),\n                        o = r.getBlockSealsList(),\n                        a = r.getSignaturesList(),\n                        s = y();\n                    return s.tag = e.tag, s.block = {\n                      id: T(r.getId_asU8()),\n                      parentId: T(r.getParentId_asU8()),\n                      height: r.getHeight(),\n                      timestamp: r.getTimestamp(),\n                      collectionGuarantees: n.map(function (e) {\n                        return {\n                          collectionId: T(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: T(e.getBlockId_asU8()),\n                          executionReceiptId: T(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, s;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          case e(B):\n            return function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var n = new I();\n                  return Promise.resolve(x(t.node, l.Ping, n)).then(function (t) {\n                    var r = y();\n                    return r.tag = e.tag, r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(B, w);\n\n          default:\n            return B;\n        }\n      });\n    },\n        N = w.node;\n\n    return Promise.resolve(N ? j(N) : Promise.resolve(b().get(\"accessNode.api\")).then(j));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nexport { j as send };","map":{"version":3,"sources":["../src/unary.js","../src/send-transaction.js","../src/send-get-account.js","../src/send-get-latest-block.js","../src/send-get-block-by-id.js","../src/send-get-block-by-height.js","../src/send.js","../src/send-get-transaction-status.js","../src/send-execute-script.js","../src/send-get-events.js","../src/send-ping.js"],"names":["grpc","setDefaultTransport","NodeHttpTransport","unary","host","method","request","Promise","resolve","reject","onEnd","status","statusMessage","message","Code","OK","Error","u8","Buffer","from","toString","padStart","pad","hexBuffer","hex","addressBuffer","addr","JSON","stringify","arg","ix","opts","tx","Transaction","setScript","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","accounts","payer","arguments","forEach","addArguments","argumentBuffer","asArgument","authorizations","map","tempId","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","keyId","setSequenceNumber","sequenceNum","setProposalKey","acct","Object","values","role","signature","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","node","AccessAPI","SendTransaction","t2","ret","response","tag","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","u8ToHex","GetAccountRequest","accountAddr","GetAccount","account","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","TextDecoder","decode","UInt8Array","address","withPrefix","getAddress_asU8","balance","getBalance","code","getCode_asU8","keys","getKeysList","index","publicKey","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","sequenceNumber","getSequenceNumber","revoked","getRevoked","replace","trim","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","block","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","id","parentId","getParentId_asU8","height","getHeight","timestamp","getTimestamp","collectionId","collectionGuarantee","getCollectionId_asU8","blockId","blockSeal","getBlockId_asU8","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","GetBlockByIDRequest","setId","GetBlockByID","GetBlockByHeightRequest","setHeight","GetBlockByHeight","send","config","get","isTransaction","sendTransaction","isGetTransactionStatus","sendGetTransactionStatus","isScript","sendExecuteScript","isGetAccount","sendGetAccount","isGetEvents","sendGetEvents","isGetLatestBlock","sendGetLatestBlock","isGetBlockById","sendGetBlockById","isGetBlockByHeight","sendGetBlockByHeight","isPing","sendPing","GetTransactionRequest","GetTransactionResult","events","getEventsList","transaction","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","type","event","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","parse","getPayload_asU8","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","GetEventsForHeightRangeRequest","setType","eventType","setStartHeight","Number","start","setEndHeight","end","GetEventsForHeightRange","results","getResultsList","blocks","result","getBlockId","blockHeight","getBlockHeight","push","PingRequest","Ping"],"mappings":"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","sourcesContent":["import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {GetAccountRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetAccountRequest()\n  req.setAddress(addressBuffer(sansPrefix(ix.accountAddr)))\n\n  const res = await unary(opts.node, AccessAPI.GetAccount, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(ix.block.height)\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n  isTransaction,\n  isGetTransactionStatus,\n  isScript,\n  isGetAccount,\n  isGetEvents,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n} from \"@onflow/interaction\"\nimport {sendTransaction} from \"./send-transaction\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status\"\nimport {sendExecuteScript} from \"./send-execute-script\"\nimport {sendGetAccount} from \"./send-get-account\"\nimport {sendGetEvents} from \"./send-get-events\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block\"\nimport {sendGetBlockById} from \"./send-get-block-by-id\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height\"\nimport {sendPing} from \"./send-ping\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n  ix = await ix\n\n  switch (true) {\n    case isTransaction(ix):\n      return sendTransaction(ix, opts)\n    case isGetTransactionStatus(ix):\n      return sendGetTransactionStatus(ix, opts)\n    case isScript(ix):\n      return sendExecuteScript(ix, opts)\n    case isGetAccount(ix):\n      return sendGetAccount(ix, opts)\n    case isGetEvents(ix):\n      return sendGetEvents(ix, opts)\n    case isGetLatestBlock(ix):\n      return sendGetLatestBlock(ix, opts)\n    case isGetBlockById(ix):\n      return sendGetBlockById(ix, opts)\n    case isGetBlockByHeight(ix):\n      return sendGetBlockByHeight(ix, opts)\n    case isPing(ix):\n      return sendPing(ix, opts)\n    default:\n      return ix\n  }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transactionId))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  const req = new ExecuteScriptAtLatestBlockRequest()\n  const code = Buffer.from(ix.message.cadence, \"utf8\")\n  ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n  req.setScript(code)\n\n  const res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetEventsForHeightRangeRequest()\n  req.setType(ix.events.eventType)\n  req.setStartHeight(Number(ix.events.start))\n  req.setEndHeight(Number(ix.events.end))\n\n  const res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = result.getBlockId()\n    const blockHeight = result.getBlockHeight()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"@onflow/response\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n"]},"metadata":{},"sourceType":"module"}