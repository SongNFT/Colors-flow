[{"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\index.js":"1","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\config.js":"2","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\App.js":"3","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\current-user.js":"5","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\AuthCluster.js":"6","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\init-cluster.js":"7","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\profile-cluster.js":"8","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\init.js":"9","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\profile.js":"10","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\is-initialized.script.js":"11","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\init-account.tx.js":"12","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\fetch-profile.script.js":"13","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\profile-set-name.tx.js":"14","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\TokenData.js":"15","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\MintColor.js":"16","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\Marketplace.js":"17"},{"size":461,"mtime":1618080862839,"results":"18","hashOfConfig":"19"},{"size":344,"mtime":1618288032546,"results":"20","hashOfConfig":"19"},{"size":650,"mtime":1618259788214,"results":"21","hashOfConfig":"19"},{"size":375,"mtime":1618080862840,"results":"22","hashOfConfig":"19"},{"size":1397,"mtime":1618080862837,"results":"23","hashOfConfig":"19"},{"size":1235,"mtime":1618087067368,"results":"24","hashOfConfig":"19"},{"size":895,"mtime":1618246407156,"results":"25","hashOfConfig":"19"},{"size":1466,"mtime":1618246433757,"results":"26","hashOfConfig":"19"},{"size":1791,"mtime":1618080862838,"results":"27","hashOfConfig":"19"},{"size":1610,"mtime":1618080862838,"results":"28","hashOfConfig":"19"},{"size":492,"mtime":1618080862836,"results":"29","hashOfConfig":"19"},{"size":1742,"mtime":1618080862836,"results":"30","hashOfConfig":"19"},{"size":495,"mtime":1618080862835,"results":"31","hashOfConfig":"19"},{"size":746,"mtime":1618080862837,"results":"32","hashOfConfig":"19"},{"size":1464,"mtime":1618257567369,"results":"33","hashOfConfig":"19"},{"size":1560,"mtime":1618259869795,"results":"34","hashOfConfig":"19"},{"size":5056,"mtime":1618288170181,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"4urko5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\index.js",[],["77","78"],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\config.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\App.js",["79","80","81","82","83"],"// File: ./src/App.js\r\n\r\nimport React from \"react\"\r\nimport {AuthCluster} from \"./AuthCluster\"\r\nimport {InitCluster} from \"./init-cluster\"\r\nimport {ProfileCluster} from \"./profile-cluster\"\r\nimport {useCurrentUser} from \"./hooks/current-user\"\r\nimport TokenData from \"./TokenData.js\"\r\nimport MintColor from \"./MintColor.js\"\r\nimport Markeplace from \"./Marketplace.js\"\r\nexport default function App() {\r\n  const cu = useCurrentUser()\r\n\r\n  return (\r\n    <div>\r\n      <AuthCluster />\r\n     {/*} <InitCluster address={cu.addr} />\r\n      <ProfileCluster address={cu.addr} />\r\n      <TokenData/>\r\n      {/*<MintColor/>*/}\r\n     <Markeplace/>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\current-user.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\AuthCluster.js",["84","85","86","87","88","89","90","91"],"// File: ./src/auth-cluster.js\r\n\r\nimport React, {useState, useEffect} from \"react\"\r\nimport {useCurrentUser} from \"./hooks/current-user\"\r\nimport {useProfile} from \"./hooks/profile\"\r\n\r\nimport \"./AuthCluster.css\"\r\nfunction WithAuth({address}) {\r\n  \r\n  const profile = useProfile(address)\r\n  const cu = useCurrentUser()\r\n  useEffect(() => profile.refetch(), [address])\r\n  if (address == null) return null\r\n  return !cu.loggedIn ? null : (\r\n  <div class=\"topnav\">\r\n    <a href=\"#\">{profile.name}</a>\r\n    <a onClick={cu.logOut}>Logout</a>\r\n    <a className = \"right\">{profile.address}</a>\r\n    <a className = \"right\"><img\r\n            src={profile.avatar}\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n            alt={profile.name}\r\n          /></a>\r\n  </div>\r\n    \r\n  )\r\n}\r\n\r\nfunction SansAuth() {\r\n  const cu = useCurrentUser()\r\n  return cu.loggedIn ? null : (\r\n    <div>\r\n      <div class=\"topnav\">\r\n        <a href=\"#\" onClick={cu.logIn}>Log In</a>\r\n        <a onClick={cu.signUp}>Sign Up</a>\r\n      </div>\r\n      <h1>Login to Continue</h1>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport function AuthCluster() {\r\n  const cu = useCurrentUser()\r\n  return (\r\n    <>\r\n      <WithAuth address={cu.addr} />\r\n      <SansAuth />\r\n    </>\r\n  )\r\n}","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\init-cluster.js",["92"],"// File: ./src/init-cluster.js\r\n\r\nimport {useEffect} from \"react\"\r\nimport {useCurrentUser} from \"./hooks/current-user\"\r\nimport {useInit} from \"./hooks/init.js\"\r\n\r\nconst fmtBool = bool => (bool ? \"yes\" : \"no\")\r\n\r\nexport function InitCluster({address}) {\r\n  const cu = useCurrentUser()\r\n  const init = useInit(address)\r\n  useEffect(() => init.check(), [address])\r\n\r\n  if (address == null) return null\r\n\r\n  return (\r\n    <div>\r\n      <h3>{address}</h3>\r\n      <ul>\r\n        <li>\r\n          <strong>Profile: </strong>\r\n          {init.isIdle && <span>{fmtBool(init.profile)}</span>}\r\n          {!init.profile && cu.addr === address && init.isIdle && (\r\n            <button disabled={init.isProcessing} onClick={init.exec}>\r\n              Initialize Profile\r\n            </button>\r\n          )}\r\n          {init.isProcessing && <span>PROCESSING</span>}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\profile-cluster.js",["93"],"// File: ./src/profile-cluster.js\r\n\r\nimport {useState, useEffect} from \"react\"\r\nimport {useCurrentUser} from \"./hooks/current-user\"\r\nimport {useProfile} from \"./hooks/profile\"\r\n\r\nfunction ProfileForm() {\r\n  const cu = useCurrentUser()\r\n  const profile = useProfile(cu.addr)\r\n  const [name, setName] = useState(\"\")\r\n  useEffect(() => {\r\n    setName(profile.name)\r\n  }, [profile.name])\r\n\r\n  const submit = () => {\r\n    profile.setName(name)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={name} onChange={e => setName(e.target.value)} />\r\n      {profile.isIdle && <button onClick={submit}>Update Name</button>}\r\n      {profile.isProcessing && <span>PROCESSING</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ProfileCluster({address}) {\r\n  const profile = useProfile(address)\r\n  useEffect(() => profile.refetch(), [address])\r\n  if (address == null) return null\r\n\r\n  return (\r\n    <div>\r\n     {/*} <h3>Profile: {address}</h3>*/}\r\n    \r\n      <ul>\r\n        \r\n        <li>\r\n          <strong>Name: </strong>\r\n          <span>{profile.name}</span>\r\n          {profile.isCurrentUser && <span> -You</span>}\r\n          {profile.isProcessing && <span>PROCESSING</span>}\r\n        </li>\r\n        <li>\r\n          <strong>Color: </strong>\r\n          <span>{profile.color}</span>\r\n        </li>\r\n        <li>\r\n          <strong>Info: </strong>\r\n          <span>{profile.info}</span>\r\n        </li>\r\n      </ul>\r\n      {profile.isCurrentUser && <ProfileForm />}\r\n    </div>\r\n  )\r\n}","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\init.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\hooks\\profile.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\is-initialized.script.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\init-account.tx.js",["94"],"// File: ./src/flow/init-account.tx.js\r\n\r\nimport * as fcl from \"@onflow/fcl\"\r\nimport * as t from \"@onflow/types\"\r\n\r\nexport async function initAccount() {\r\n  const txId = await fcl\r\n    .send([\r\n      // Transactions use fcl.transaction instead of fcl.script\r\n      // Their syntax is a little different too\r\n      fcl.transaction`\r\n        import Profile from 0xProfile\r\n\r\n        transaction {\r\n          // We want the account's address for later so we can verify if the account was initialized properly\r\n          let address: Address\r\n\r\n          prepare(account: AuthAccount) {\r\n            // save the address for the post check\r\n            self.address = account.address\r\n\r\n            // Only initialize the account if it hasn't already been initialized\r\n            if (!Profile.check(self.address)) {\r\n              // This creates and stores the profile in the user's account\r\n              account.save(<- Profile.new(), to: Profile.privatePath)\r\n\r\n              // This creates the public capability that lets applications read the profile's info\r\n              account.link<&Profile.Base{Profile.Public}>(Profile.publicPath, target: Profile.privatePath)\r\n            }\r\n          }\r\n\r\n          // verify that the account has been initialized\r\n          post {\r\n            Profile.check(self.address): \"Account was not initialized\"\r\n          }\r\n        }\r\n      `,\r\n      fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\r\n      fcl.proposer(fcl.authz), // current user acting as the nonce\r\n      fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\r\n      fcl.limit(35), // set the compute limits\r\n    ])\r\n    .then(fcl.decode)\r\n\r\n  return fcl.tx(txId).onceSealed()\r\n}","C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\fetch-profile.script.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\flow\\profile-set-name.tx.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\TokenData.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\MintColor.js",[],"C:\\Users\\Eli\\Desktop\\Colors-Flow\\frontend\\src\\Marketplace.js",["95"],"import React, { useState, useEffect } from \"react\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport * as t from \"@onflow/types\"\r\nimport \"./Marketplace.css\"\r\nconst TokenData = () => {\r\n  const [tokensToSell, setTokensToSell] = useState([])\r\n  useEffect(() => {\r\n    checkMarketplace();\r\n  }, []);\r\n\r\n  const checkMarketplace = async () => {\r\n    try {\r\n      const encoded = await fcl.send([\r\n        fcl.script`\r\n        import MarketplaceContract from 0xd929bd6c5ce17fe1\r\n        pub fun main(): [UInt64] {\r\n            let account1 = getAccount(0xd929bd6c5ce17fe1)\r\n        \r\n            let acct1saleRef = account1.getCapability<&AnyResource{MarketplaceContract.SalePublic}>(/public/NFTSale)\r\n                .borrow()\r\n                ?? panic(\"Could not borrow acct2 nft sale reference\")\r\n        \r\n            return acct1saleRef.getIDs()\r\n        }\r\n        `,\r\n      ]);\r\n      const decoded = await fcl.decode(encoded);\r\n      let marketplaceMetadata = [];\r\n      for (const id of decoded) {\r\n        const encodedMetadata = await fcl.send([\r\n          fcl.script`\r\n            import ColorItems from 0xd929bd6c5ce17fe1\r\n            pub fun main(id: Int) : {String : String} {\r\n              let nftOwner = getAccount(0xd929bd6c5ce17fe1)  \r\n              let capability = nftOwner.getCapability<&{ColorItems.NFTReceiver}>(/public/NFTReceiver)\r\n          \r\n              let receiverRef = capability.borrow()\r\n                  ?? panic(\"Could not borrow the receiver reference\")\r\n          \r\n              return receiverRef.getMetadata(id: 1)\r\n            }\r\n          `,\r\n          fcl.args([\r\n            fcl.arg(id, t.Int)    \r\n          ]),\r\n        ]);\r\n\r\n        const decodedMetadata = await fcl.decode(encodedMetadata);\r\n        const encodedPrice = await fcl.send([\r\n          fcl.script`\r\n            import MarketplaceContract from 0xd929bd6c5ce17fe1\r\n            pub fun main(id: UInt64): UFix64? {\r\n                let account1 = getAccount(0xd929bd6c5ce17fe1)\r\n            \r\n                let acct1saleRef = account1.getCapability<&AnyResource{MarketplaceContract.SalePublic}>(/public/NFTSale)\r\n                    .borrow()\r\n                    ?? panic(\"Could not borrow acct nft sale reference\")\r\n            \r\n                return acct1saleRef.idPrice(tokenID: id)\r\n            }\r\n          `, \r\n          fcl.args([\r\n            fcl.arg(id, t.UInt64)\r\n          ])\r\n        ])\r\n        const decodedPrice = await fcl.decode(encodedPrice)\r\n        decodedMetadata[\"price\"] = decodedPrice;\r\n        marketplaceMetadata.push(decodedMetadata);\r\n      }\r\n      setTokensToSell(marketplaceMetadata);\r\n    } catch (error) {\r\n      console.log(\"NO NFTs FOR SALE\");\r\n      console.log(\"ERROR: \" + error)\r\n    }\r\n  };\r\n\r\n  const buyToken = async (tokenId) => {\r\n    const txId = await fcl\r\n    .send([\r\n      fcl.proposer(fcl.authz),\r\n      fcl.payer(fcl.authz),\r\n      fcl.authorizations([fcl.authz]),\r\n      fcl.limit(50),\r\n      fcl.args([\r\n        fcl.arg(tokenId, t.UInt64)\r\n      ]),\r\n      fcl.transaction`\r\n        import ColorItems from 0xd929bd6c5ce17fe1\r\n        import NonfungibleToken from 0xd929bd6c5ce17fe1\r\n        import MarketplaceContract from 0xd929bd6c5ce17fe1\r\n        \r\n        transaction {\r\n            let collectionRef: &AnyResource{ColorItems.NFTReceiver}\r\n            let temporaryVault: @NonfungibleToken.Vault\r\n        \r\n            prepare(acct: AuthAccount) {\r\n                self.collectionRef = acct.borrow<&AnyResource{ColorItems.NFTReceiver}>(from: /storage/NFTCollection)!\r\n                let vaultRef = acct.borrow<&NonfungibleToken.Vault>(from: /storage/MainVault)\r\n                    ?? panic(\"Could not borrow owner's vault reference\")\r\n        \r\n                self.temporaryVault <- vaultRef.withdraw(amount: 10.0)\r\n            }\r\n        \r\n            execute {\r\n                let seller = getAccount(0xd929bd6c5ce17fe1)\r\n                let saleRef = seller.getCapability<&AnyResource{MarketplaceContract.SalePublic}>(/public/NFTSale)\r\n                    .borrow()\r\n                    ?? panic(\"Could not borrow seller's sale reference\")\r\n        \r\n                saleRef.purchase(tokenID: tokenId, recipient: self.collectionRef, buyTokens: <-self.temporaryVault)\r\n            }\r\n        }\r\n      `,      \r\n    ])\r\n    const decoded = await fcl.decode(txId);\r\n    console.log(decoded);\r\n    console.log(fcl.tx(txId).onceSealed());\r\n    checkMarketplace();\r\n  }\r\n  return (\r\n    <div className=\"token-data\">\r\n      <h1>NFT Markeplace</h1>\r\n      {\r\n        \r\n        tokensToSell.map(token => {\r\n          return (\r\n            <div key={token.uri} className=\"listing\">\r\n              <div>\r\n                <h3>{token.name}</h3>\r\n                <h4>Stats</h4>\r\n                <p>Color Code: {token.color}</p>\r\n                <h4>Price</h4>\r\n                <p>{token.price} Pinnies</p>\r\n                <button className=\"btn-primary\">Buy Now</button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TokenData;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":9,"nodeType":"102","messageId":"103","endLine":5,"endColumn":20},{"ruleId":"100","severity":1,"message":"104","line":6,"column":9,"nodeType":"102","messageId":"103","endLine":6,"endColumn":23},{"ruleId":"100","severity":1,"message":"105","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":17},{"ruleId":"100","severity":1,"message":"106","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":12,"column":9,"nodeType":"102","messageId":"103","endLine":12,"endColumn":11},{"ruleId":"100","severity":1,"message":"108","line":3,"column":16,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":12,"column":38,"nodeType":"111","endLine":12,"endColumn":47,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":16,"column":5,"nodeType":"115","endLine":16,"endColumn":17},{"ruleId":"113","severity":1,"message":"116","line":17,"column":5,"nodeType":"115","endLine":17,"endColumn":28},{"ruleId":"113","severity":1,"message":"116","line":18,"column":5,"nodeType":"115","endLine":18,"endColumn":28},{"ruleId":"113","severity":1,"message":"116","line":19,"column":5,"nodeType":"115","endLine":19,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":35,"column":9,"nodeType":"115","endLine":35,"endColumn":40},{"ruleId":"113","severity":1,"message":"116","line":36,"column":9,"nodeType":"115","endLine":36,"endColumn":32},{"ruleId":"109","severity":1,"message":"117","line":12,"column":33,"nodeType":"111","endLine":12,"endColumn":42,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"110","line":30,"column":38,"nodeType":"111","endLine":30,"endColumn":47,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":4,"column":13,"nodeType":"102","messageId":"103","endLine":4,"endColumn":14},{"ruleId":"100","severity":1,"message":"121","line":77,"column":9,"nodeType":"102","messageId":"103","endLine":77,"endColumn":17},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'InitCluster' is defined but never used.","Identifier","unusedVar","'ProfileCluster' is defined but never used.","'TokenData' is defined but never used.","'MintColor' is defined but never used.","'cu' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.","ArrayExpression",["124"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["125"],["126"],"'t' is defined but never used.","'buyToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},"Update the dependencies array to be: [address, profile]",{"range":"132","text":"133"},"Update the dependencies array to be: [address, init]",{"range":"134","text":"135"},{"range":"136","text":"133"},[354,363],"[address, profile]",[350,359],"[address, init]",[813,822]]