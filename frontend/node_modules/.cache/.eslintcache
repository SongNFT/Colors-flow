[{"/Users/EliFinkel/Desktop/TestProject/frontend/src/index.js":"1","/Users/EliFinkel/Desktop/TestProject/frontend/src/App.js":"2","/Users/EliFinkel/Desktop/TestProject/frontend/src/reportWebVitals.js":"3","/Users/EliFinkel/Desktop/TestProject/frontend/src/config.js":"4","/Users/EliFinkel/Desktop/TestProject/frontend/src/AuthCluster.js":"5","/Users/EliFinkel/Desktop/TestProject/frontend/src/TokenData.js":"6","/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/current-user.js":"7","/Users/EliFinkel/Desktop/TestProject/frontend/src/init-cluster.js":"8","/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/init.js":"9","/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/init-account.tx.js":"10","/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/is-initialized.script.js":"11","/Users/EliFinkel/Desktop/TestProject/frontend/src/profile-cluster.js":"12","/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/profile.js":"13","/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/fetch-profile.script.js":"14","/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/profile-set-name.tx.js":"15"},{"size":443,"mtime":1617998135834,"results":"16","hashOfConfig":"17"},{"size":447,"mtime":1618009052886,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617985026128,"results":"19","hashOfConfig":"17"},{"size":229,"mtime":1617985422301,"results":"20","hashOfConfig":"17"},{"size":658,"mtime":1618029337430,"results":"21","hashOfConfig":"17"},{"size":1408,"mtime":1617995158766,"results":"22","hashOfConfig":"17"},{"size":1361,"mtime":1617998067866,"results":"23","hashOfConfig":"17"},{"size":870,"mtime":1618000905630,"results":"24","hashOfConfig":"17"},{"size":1733,"mtime":1618000904220,"results":"25","hashOfConfig":"17"},{"size":1697,"mtime":1617997426235,"results":"26","hashOfConfig":"17"},{"size":473,"mtime":1617997048230,"results":"27","hashOfConfig":"17"},{"size":1559,"mtime":1618001052026,"results":"28","hashOfConfig":"17"},{"size":1548,"mtime":1618002449353,"results":"29","hashOfConfig":"17"},{"size":475,"mtime":1617997238928,"results":"30","hashOfConfig":"17"},{"size":718,"mtime":1617997270516,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ub53vb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/EliFinkel/Desktop/TestProject/frontend/src/index.js",[],["68","69"],"/Users/EliFinkel/Desktop/TestProject/frontend/src/App.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/reportWebVitals.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/config.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/AuthCluster.js",["70","71"],"// File: ./src/auth-cluster.js\n\nimport React, {useState, useEffect} from \"react\"\nimport {useCurrentUser} from \"./hooks/current-user\"\n\nfunction WithAuth() {\n  const cu = useCurrentUser()\n\n  return !cu.loggedIn ? null : (\n    <div>\n      <span>{cu.addr ?? \"No Address\"}</span>\n      <button onClick={cu.logOut}>Log Out</button>\n    </div>\n  )\n}\n\nfunction SansAuth() {\n  const cu = useCurrentUser()\n\n  return cu.loggedIn ? null : (\n    <div>\n      <button onClick={cu.logIn}>Log In</button>\n      <button onClick={cu.signUp}>Sign Up</button>\n    </div>\n  )\n}\n\nexport function AuthCluster() {\n  return (\n    <>\n      <WithAuth />\n      <SansAuth />\n    </>\n  )\n}","/Users/EliFinkel/Desktop/TestProject/frontend/src/TokenData.js",[],["72","73"],"/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/current-user.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/init-cluster.js",["74"],"// File: ./src/init-cluster.js\n\nimport {useEffect} from \"react\"\nimport {useCurrentUser} from \"./hooks/current-user\"\nimport {useInit} from \"./hooks/init.js\"\n\nconst fmtBool = bool => (bool ? \"yes\" : \"no\")\n\nexport function InitCluster({address}) {\n  const cu = useCurrentUser()\n  const init = useInit(address)\n  useEffect(() => init.check(), [address])\n\n  if (address == null) return null\n\n  return (\n    <div>\n      <h3>Init?: {address}</h3>\n      <ul>\n        <li>\n          <strong>Profile: </strong>\n          {init.isIdle && <span>{fmtBool(init.profile)}</span>}\n          {!init.profile && cu.addr === address && init.isIdle && (\n            <button disabled={init.isProcessing} onClick={init.exec}>\n              Initialize Profile\n            </button>\n          )}\n          {init.isProcessing && <span>PROCESSING</span>}\n        </li>\n      </ul>\n    </div>\n  )\n}","/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/init.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/init-account.tx.js",["75"],"// File: ./src/flow/init-account.tx.js\n\nimport * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nexport async function initAccount() {\n  const txId = await fcl\n    .send([\n      // Transactions use fcl.transaction instead of fcl.script\n      // Their syntax is a little different too\n      fcl.transaction`\n        import Profile from 0xProfile\n\n        transaction {\n          // We want the account's address for later so we can verify if the account was initialized properly\n          let address: Address\n\n          prepare(account: AuthAccount) {\n            // save the address for the post check\n            self.address = account.address\n\n            // Only initialize the account if it hasn't already been initialized\n            if (!Profile.check(self.address)) {\n              // This creates and stores the profile in the user's account\n              account.save(<- Profile.new(), to: Profile.privatePath)\n\n              // This creates the public capability that lets applications read the profile's info\n              account.link<&Profile.Base{Profile.Public}>(Profile.publicPath, target: Profile.privatePath)\n            }\n          }\n\n          // verify that the account has been initialized\n          post {\n            Profile.check(self.address): \"Account was not initialized\"\n          }\n        }\n      `,\n      fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n      fcl.proposer(fcl.authz), // current user acting as the nonce\n      fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n      fcl.limit(35), // set the compute limits\n    ])\n    .then(fcl.decode)\n\n  return fcl.tx(txId).onceSealed()\n}","/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/is-initialized.script.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/profile-cluster.js",["76"],"// File: ./src/profile-cluster.js\n\nimport {useState, useEffect} from \"react\"\nimport {useCurrentUser} from \"./hooks/current-user\"\nimport {useProfile} from \"./hooks/profile\"\n\nfunction ProfileForm() {\n  const cu = useCurrentUser()\n  const profile = useProfile(cu.addr)\n  const [name, setName] = useState(\"\")\n  useEffect(() => {\n    setName(profile.name)\n  }, [profile.name])\n\n  const submit = () => {\n    profile.setName(name)\n  }\n\n  return (\n    <div>\n      <input value={name} onChange={e => setName(e.target.value)} />\n      {profile.isIdle && <button onClick={submit}>Update Name</button>}\n      {profile.isProcessing && <span>PROCESSING</span>}\n    </div>\n  )\n}\n\nexport function ProfileCluster({address}) {\n  const profile = useProfile(address)\n  useEffect(() => profile.refetch(), [address])\n  if (address == null) return null\n\n  return (\n    <div>\n      <h3>Profile: {address}</h3>\n      {profile.isCurrentUser && <ProfileForm />}\n      <ul>\n        <li>\n          <img\n            src={profile.avatar}\n            width=\"50px\"\n            height=\"50px\"\n            alt={profile.name}\n          />\n        </li>\n        <li>\n          <strong>Name: </strong>\n          <span>{profile.name}</span>\n          {profile.isCurrentUser && <span> -You</span>}\n          {profile.isProcessing && <span>PROCESSING</span>}\n        </li>\n        <li>\n          <strong>Color: </strong>\n          <span>{profile.color}</span>\n        </li>\n        <li>\n          <strong>Info: </strong>\n          <span>{profile.info}</span>\n        </li>\n      </ul>\n    </div>\n  )\n}","/Users/EliFinkel/Desktop/TestProject/frontend/src/hooks/profile.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/fetch-profile.script.js",[],"/Users/EliFinkel/Desktop/TestProject/frontend/src/flow/profile-set-name.tx.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":3,"column":26,"nodeType":"83","messageId":"84","endLine":3,"endColumn":35},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":12,"column":33,"nodeType":"90","endLine":12,"endColumn":42,"suggestions":"91"},{"ruleId":"81","severity":1,"message":"92","line":4,"column":13,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":30,"column":38,"nodeType":"90","endLine":30,"endColumn":47,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["95"],["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'t' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [address, init]",{"range":"103","text":"104"},"Update the dependencies array to be: [address, profile]",{"range":"105","text":"106"},[339,348],"[address, init]",[784,793],"[address, profile]"]